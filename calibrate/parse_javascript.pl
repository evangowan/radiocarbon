#! /usr/bin/env perl

# this script takes in the javascript file generated by OxCal (at least for the 4.x versions) and parses out the prior file. The Prior file will be named based on the
# parameter "ocd[#].name". The starting time of the distribution is found in the parameter "ocd[#].likelihood.start". The array
# that contains the probability distribution function is "ocd[5].likelihood.prob".



my $name_search = "name=";
my $start_time_search = "ocd.likelihood.start=";
my $posterior = "posterior";
my $prob = "ocd.likelihood.prob=";
my $prob_post = "ocd.posterior.prob=";
my $resolution_search = "ocd.likelihood.resolution=";
my $probNorm_search = "probNorm";
my $start_time = 0;
my $date = 0;
my $resolution = 0;
my $probNorm = 0;
# the javascript filename is entered in the command line
my $filename = $ARGV[0];
my $outname = "";
my $junkfile = "junk.txt";
print "Opening file: $filename\n";

open(my $in, "<", $filename) or die "Can't open $filename: $!/n";

#open(my $junk, ">", $junkfile) or die "Can't open $junkfile: $!/n";

while (<$in>) {

#ocd[2].name="Main";

	s/\[.*?\]//;
#	print $junk $_;
	if(/$name_search/) {
#		print $_;

		s/.*\=//;
		s/[\"\;\}\n ]//g;

		$outname = $_;
#		print "outname: $outname";
		if ($outname eq "") {
			$outname = "before";
		}
		
	}

	if (/$posterior/) {
		$post_check = 1;
	}
	else {
		$post_check = 0;
      }


	s/$posterior/likelihood/;

	if(/$start_time_search/) {

		s/.*\=//;
		s/[\;\n]//g;

		$start_time = $_;

#		print "start time: $start_time\n";

	}

	if(/$probNorm_search/) {

		s/.*\=//;
		s/[\;\n]//g;

		$probNorm = $_;

		print "Probability Normalization: $probNorm\n";

	}

	if (/$resolution_search/) {

		s/.*\=//;
		s/[\;\n]//g;

		$resolution = $_;

#		print "resolution: $resolution\n";
	}

	if(/$prob/ or /$prob_post/) {

		if ($post_check == 1) {

			$outname="$outname.$posterior";
		}
		$outname = "$outname.prior";
		print "outname: $outname\n";
		s/.*\=//;
		s/[\;\[\]]//g;

		$count = tr/,//;
#		s/, /\n/g;
#		print "number of points: $count\n";
		$_ = ", $_";

#		s/\n/, /;

		 for ($counter = 0; $counter <= $count; $counter++) {
		 	$date = $start_time + $counter * $resolution ; # OxCal is made by archaeologists, who prefer things in BC/AD for some reason. you have to subtract 1950.5 to get Cal BP
		#	print "$counter $start_time $resolution $date\n";
			s/, /\n$date,/;
		 }
		chomp; # nom nom nom
		s/\n//;
#		print "$_\n";
#		print "date: $date\n";

		open(my $out, ">", $outname) or die "Can't open $outname: $!/n";

		@splitthis = split(/\n/);

		for ($counter = 0; $counter <= $count; $counter++) {

			@linesplit = split(/,/, $splitthis[$counter]);

			$linesplit[1] = $linesplit[1] * $probNorm;
	#		print $linesplit[1];
			print $out "$linesplit[0]\t$linesplit[1]\n";
#			$probNorm = 1;

		}




		close $out;

	}

}

#close $junk;
close $in;
